[tox]
envlist = py34,py27,pep8
minversion = 1.6
skipsdist = True

[testenv]
setenv = VIRTUAL_ENV={envdir}
usedevelop = True
install_command =
  constraints: {[testenv:common-constraints]install_command}
  {toxinidir}/tools/tox_install.sh unconstrained {opts} {packages}
deps = -r{toxinidir}/test-requirements.txt
whitelist_externals = sh
commands =
  sh tools/pretty_tox.sh '{posargs}'
# there is also secret magic in pretty_tox.sh which lets you run in a fail only
# mode. To do this define the TRACE_FAILONLY environmental variable.

[testenv:common-constraints]
install_command = {toxinidir}/tools/tox_install.sh constrained -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt} {opts} {packages}

[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:pep8]
commands =
  flake8
  # pylint --rcfile=.pylintrc --output-format=colorized {posargs:neutron_lbaas}
  neutron-db-manage --subproject neutron-lbaas --config-file neutron_lbaas/tests/etc/neutron.conf check_migration
  {[testenv:genconfig]commands}
whitelist_externals = sh

[testenv:pep8-constraints]
install_command = {[testenv:common-constraints]install_command}
commands =
  flake8
  # pylint --rcfile=.pylintrc --output-format=colorized {posargs:neutron_lbaas}
  neutron-db-manage --subproject neutron-lbaas --config-file neutron_lbaas/tests/etc/neutron.conf check_migration
whitelist_externals = {[testenv:pep8]whitelist_externals}

[testenv:i18n]
commands = python ./tools/check_i18n.py ./neutron_lbaas ./tools/i18n_cfg.py

[testenv:cover]
commands =
  python setup.py testr --coverage --coverage-package-name=neutron_lbaas --testr-args='{posargs}'

[testenv:cover-constraints]
install_command = {[testenv:common-constraints]install_command}
commands =
  python setup.py testr --coverage --coverage-package-name=neutron_lbaas --testr-args='{posargs}'

[testenv:venv]
commands = {posargs}

[testenv:venv-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = {posargs}

[testenv:docs]
commands = python setup.py build_sphinx

[testenv:docs-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = {[testenv:docs]commands}

[testenv:py34]
commands = python -m testtools.run \
    neutron_lbaas.tests.unit.common.cert_manager.test_barbican

[testenv:py34-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = {[testenv:py34]commands}

[flake8]
# E125 continuation line does not distinguish itself from next logical line
# E126 continuation line over-indented for hanging indent
# E128 continuation line under-indented for visual indent
# E129 visually indented line with same indent as next logical line
# E265 block comment should start with ‘# ‘
# H305 imports not grouped correctly
# H405 multi line docstring summary not separated with an empty line
# TODO(marun) H404 multi line docstring should start with a summary
# N324 contextlib.nested is deprecated
ignore = E125,E126,E128,E129,E265,H305,H404,H405,N324
show-source = true
builtins = _
exclude = .venv,.git,.tox,dist,doc,*openstack/common*,*lib/python*,*egg,build,tools,.ropeproject,rally-scenarios,neutron_lbaas/tests/tempest/lib,neutron_lbaas/tests/tempest/v1/api

[hacking]
import_exceptions = neutron_lbaas._i18n
local-check-factory = neutron.hacking.checks.factory

# If you are running the tests locally you should set the env variable
# TEMPEST_CONFIG_DIR=/opt/stack/tempest/etc
[testenv:apiv1]
sitepackages = True
passenv = TEMPEST_CONFIG_DIR
setenv =
 OS_TEST_PATH={toxinidir}/neutron_lbaas/tests/tempest/v1/api
 OS_TESTR_CONCURRENCY=1

# If you are running the tests locally you should set the env variable
# TEMPEST_CONFIG_DIR=/opt/stack/tempest/etc
[testenv:apiv2]
sitepackages = True
passenv = TEMPEST_CONFIG_DIR
setenv =
 OS_TEST_PATH={toxinidir}/neutron_lbaas/tests/tempest/v2/api
 OS_TESTR_CONCURRENCY=1

# If you are running the tests locally you should set the env variable
# TEMPEST_CONFIG_DIR=/opt/stack/tempest/etc
[testenv:scenario]
sitepackages = True
passenv = TEMPEST_CONFIG_DIR
setenv =
 OS_TEST_PATH={toxinidir}/neutron_lbaas/tests/tempest/v2/scenario
 OS_TESTR_CONCURRENCY=1

# If you are running the tests locally you should set the env variable
# TEMPEST_CONFIG_DIR=/opt/stack/tempest/etc
[testenv:ddt]
sitepackages = True
passenv = TEMPEST_CONFIG_DIR
setenv =
 OS_TEST_PATH={toxinidir}/neutron_lbaas/tests/tempest/v2/ddt
 OS_TESTR_CONCURRENCY=1

[testenv:genconfig]
commands = {toxinidir}/tools/generate_config_file_samples.sh
